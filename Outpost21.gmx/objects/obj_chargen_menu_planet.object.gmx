<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chargen_planets</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stepstep = 0.10; //fade in automatically
image_alpha = -1;
selected = false;
image_speed = 0;
box_height = 0;
planet_assigned = enum_homeworlds.offworld;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//remove if fadeout
if stepstep &lt; 0 and image_alpha &lt; 0 {
    instance_destroy();
}
else if image_alpha &gt;= 1 and stepstep &gt;= 0 {
    //allow pressing if done fade in
    if point_in_rectangle(mouse_x,mouse_y,x,y,x+64,y+64) {
        selected = true;
        
        with obj_chargen_menu_planet depth = -100; //bring others down
        depth = -101; //put self on top
        
        if mouse_check_button_pressed(mb_left) {
            with obj_chargen_menu_planet stepstep = -0.10; //fadeout
            with obj_chargen_selectedplanet stepstep = -0.10; //fadeout last planet
            with instance_create(1536,432,obj_chargen_selectedplanet) {
                planet_assigned = other.planet_assigned;
                image_index = planet_assigned;
            }
        
            //next menu
            //spawn new menu
            for (var i=0; i&lt;5; i+=1) {
                with instance_create(1696,32+(i*80),obj_chargen_menu_body) {
                    image_index = i;
                }
            }
        }
    }
    else
    {
        selected = false;
    }
}
else
{
    selected = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = clamp(image_alpha + stepstep,-1,1.50);

draw_sprite_ext(sprite_index,planet_assigned,x,y,1,1,0,image_blend,clamp(image_alpha,0,1));
draw_sprite_ext(spr_chargen_planets_highlight,0,x,y,1,1,0,image_blend,selected*image_alpha);

if depth = -101 {
    if box_height == 0 box_height = string_height_ext(global.planet_mod[ planet_assigned, 0] + ":#" + global.planet_mod[ planet_assigned, 1],16,270)+5;
    
    draw_sprite_part_ext(spr_planetlore_backing,0,0,0,288,6,1792,32,1,1,image_blend,image_alpha);
    draw_sprite_part_ext(spr_planetlore_backing,0,0,7,288,1,1792,32+6,1,box_height,image_blend,image_alpha);
    draw_sprite_part_ext(spr_planetlore_backing,0,0,8,288,6,1792,32+6+box_height,1,1,image_blend,image_alpha);
    
    draw_set_color(c_black);
    draw_set_alpha(image_alpha);
    draw_text_ext(1792+8,32+8,global.planet_mod[ planet_assigned, 0] + ":#" +global.planet_mod[ planet_assigned, 1],16,270);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
