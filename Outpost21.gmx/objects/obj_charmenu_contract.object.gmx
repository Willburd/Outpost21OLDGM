<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_resumeform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Text inputs
input_array[0,0] = "";//name
input_array[0,1] = 22;

input_array[1,0] = ""; //age
input_array[1,1] = 3;

current_selection = -1; //text input

//storage
job_input = enum_jobs.assistant; //defaults to assistant

previous_job_input = 0;

var lang_list = global.race_mod[ obj_chargen_menu_race.selected_race, 10];
alt_language = lang_list[| 1];

guild_input = 0;


//event0 context menu replies
enum enum_charmenu_context {
    jobs,
    previous_jobs,
    alt_language,
    guild,
}

context_reply = enum_charmenu_context.jobs;
context_reply_passin = -1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///context menu events
switch context_reply {
    case enum_charmenu_context.jobs:
        //straight pass in
        job_input = context_reply_passin;
    break;
    
    case enum_charmenu_context.previous_jobs:
        //straight pass in
        previous_job_input = context_reply_passin;
    break;
    
    case enum_charmenu_context.alt_language:
        //extract lang list from race before selecting, all races have galactic common, so we +1 because that context menu removes it and shifts the indexes down by 1
        var lang_list = global.race_mod[ obj_chargen_menu_race.selected_race, 10];
        alt_language = lang_list[| context_reply_passin+1];
    break;
    
    case enum_charmenu_context.guild:
        //straight pass in
        guild_input = context_reply_passin;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = abs(y-ystart)/500; //leans
if y &gt; 0 and vspeed == 0 y -= 16; 


//draw me!
//x location assumes
x = 1796;
draw_sprite_ext(sprite_index,0,x,y,1,1,image_angle,image_blend,1);
draw_sprite_ext(sprite_index,1,x,y,1,1,image_angle,image_blend,1);


//draw texts
//user name
var text_ender = "";
if current_selection == 0 and current_time mod 120 &lt; 60 text_ender = "|";
var drawtext = input_array[0,0];
draw_text_transformed(x+52,y+52, drawtext + text_ender,1,1,image_angle);

//homeworld
var scale = 1 - (string_width(global.planet_mod[ obj_chargen_selectedplanet.planet_assigned, 0]) / 532);
draw_text_transformed( x+94, y+73, global.planet_mod[ obj_chargen_selectedplanet.planet_assigned, 0], scale, 1, image_angle);

//age
var text_ender = "";
if current_selection == 1 and current_time mod 120 &lt; 60 text_ender = "|";
var drawtext = input_array[1,0];
draw_text_transformed( x+283, y+68, drawtext + text_ender, 1, 1, image_angle);

//job
if job_input != -1 {
    var drawtext = global.job_mod[ job_input, enum_job_stat.stat_name];
    draw_text_transformed( x+105, y+174, drawtext, 1, 1, image_angle);
}

//old job
if previous_job_input != -1 {
    var scale = 1 - (string_width(global.previous_job_mod[ previous_job_input, 0]) / 832);
    var drawtext = global.previous_job_mod[ previous_job_input, 0];
    draw_text_transformed( x+104, y+191, drawtext, scale, 1, image_angle);
}

//language
if alt_language != -1 {
    var drawtext = global.language_mod[ alt_language, 0];
    draw_text_transformed( x+111, y+227, drawtext, 1, 1, image_angle);
}

//guild
if guild_input != -1 {
    var drawtext = global.guild_mod[ guild_input, 0];
    draw_text_transformed( x+130, y+243, drawtext, 1, 1, image_angle);
}


//buttons
if vspeed == 0 and instance_exists(obj_contextmenu) == false and instance_exists(obj_chargen_endfade) == false {
    //typing control
    input_array = scr_textbox_input(input_array,current_selection);

    
    //digits only
    if current_selection == 1 input_array[1,0] = string_digits(input_array[1,0]); //digits only in age
    
    
    //mouse clicks
    if point_in_rectangle(mouse_x,mouse_y,x+11,y+54,x+198,y+67) {
        draw_sprite(spr_resumeselect,0,x+29,y+61); //selector
        if mouse_check_button_pressed(mb_left) {
            current_selection = 0;
        }
    }
    else if point_in_rectangle(mouse_x,mouse_y,x+252,y+74,x+311,y+86) {
        draw_sprite(spr_resumeselect,0,x+267,y+81); //selector
        if mouse_check_button_pressed(mb_left) {
            current_selection = 1;
        }
    }
    else if point_in_rectangle(mouse_x,mouse_y,x+3,y+179,x+312,y+192) {
        draw_sprite(spr_resumeselect,0,x+59,y+187); //selector
        if mouse_check_button_pressed(mb_left) {
            current_selection = -1;
            with instance_create(x+96,mouse_y,obj_charmenu_contract_contextmenu) {
                context_reply = enum_charmenu_context.jobs;
                
                var job_total = array_height_2d(global.job_mod);
                for (var job=0; job&lt;job_total; job+=1)
                {
                    context_menu[ job,0] = global.job_mod[ job, enum_job_stat.stat_name];
                } 
                
                event_user(0);
            }
        }
    }
    else if point_in_rectangle(mouse_x,mouse_y,x+3,y+196,x+312,y+208) {
        draw_sprite(spr_resumeselect,0,x+50,y+204); //selector
        if mouse_check_button_pressed(mb_left) {
            current_selection = -1;
            with instance_create(x+96,mouse_y,obj_charmenu_contract_contextmenu) {
                context_reply = enum_charmenu_context.previous_jobs;
                
                var previous_job_total = array_height_2d( global.previous_job_mod);
                for (var job=0; job&lt;previous_job_total; job+=1)
                {
                    context_menu[ job,0] =  global.previous_job_mod[ job, 0];
                } 
                
                event_user(0);
            }
        }
    }
    else if point_in_rectangle(mouse_x,mouse_y,x+3,y+231,x+312,y+241) {
        draw_sprite(spr_resumeselect,0,x+50,y+237); //selector
        if mouse_check_button_pressed(mb_left) {
            current_selection = -1;
            with instance_create(x+96,mouse_y,obj_charmenu_contract_contextmenu) {
                context_reply = enum_charmenu_context.alt_language;
                
                var lang_list = global.race_mod[ obj_chargen_menu_race.selected_race, 10];
                
                var lang_total = ds_list_size(lang_list);
                for (var lang=1; lang&lt;lang_total; lang+=1)
                {
                    context_menu[ lang-1,0] = global.language_mod[ lang_list[| lang] , 0];
                    show_debug_message("context menu was given: " + string(context_menu[ lang-1,0]) );
                } 
                
                event_user(0);
            }
        }
    }
    else if point_in_rectangle(mouse_x,mouse_y,x+3,y+246,x+312,y+260) {
        draw_sprite(spr_resumeselect,0,x+61,y+255); //selector
        if mouse_check_button_pressed(mb_left) {
            current_selection = -1;
            with instance_create(x+96,mouse_y,obj_charmenu_contract_contextmenu) {
                context_reply = enum_charmenu_context.guild;
                
                var guild_total = array_height_2d( global.guild_mod);
                for (var guild=0; guild&lt;guild_total; guild+=1)
                {
                    context_menu[ guild,0] =  global.guild_mod[ guild, 0];
                } 
                
                event_user(0);
            }
        }
    }
    else if point_in_rectangle(mouse_x,mouse_y,x+250,y+390,x+312,y+413) {
        if string_length(input_array[0,0]) &gt; 0 and string_length(input_array[1,0]) &gt; 0  {
            draw_sprite(spr_resumeselect,0,x+284,y+404); //selector
            if mouse_check_button_pressed(mb_left) {
                current_selection = -1;
                
                /*
                view_xview[0] = 2304;
                instance_create(2624,196,obj_player);
                
                with obj_wall {
                    visible = false; //invis
                    alarm[0] = -1; //cancel
                }*/
                
                instance_create(x,y,obj_chargen_endfade);
            }
        }
        else
        {
            draw_sprite(spr_resumeselect,1,x+284,y+404); //selector
        }
    }
    else
    {
        //no selection
        if mouse_check_button_pressed(mb_left) {
            current_selection = -1;
        }
    }
}
else
{
    //end me
    if y &gt; ystart instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
